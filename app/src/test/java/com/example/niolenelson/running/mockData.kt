package com.example.niolenelson.running

import com.fasterxml.jackson.module.kotlin.*
import com.google.maps.model.LatLng

object MockData {
    // 27 and 22 are the same instruction just one's going down and one's going back
    // steps 1, 21, 28 are longer than .05 miles long
    val stepsWithOverlap: String = "[[37.86655000,-122.25055000, 37.86598000,-122.25044000, 37.86591000,-122.25043000], [37.86591000,-122.25043000, 37.86596000,-122.24956000, 37.86597000,-122.24932000, 37.86598000,-122.24923000, 37.86601000,-122.24867000, 37.86602000,-122.24838000, 37.86606000,-122.24768000, 37.86607000,-122.24759000, 37.86611000,-122.24698000], [37.86611000,-122.24698000, 37.86602000,-122.24693000, 37.86601000,-122.24692000, 37.86598000,-122.24692000, 37.86596000,-122.24692000, 37.86594000,-122.24692000, 37.86589000,-122.24692000, 37.86585000,-122.24688000, 37.86583000,-122.24686000, 37.86579000,-122.24682000, 37.86572000,-122.24676000, 37.86550000,-122.24659000], [37.86550000,-122.24659000, 37.86552000,-122.24654000, 37.86553000,-122.24646000, 37.86554000,-122.24642000, 37.86554000,-122.24638000, 37.86554000,-122.24635000, 37.86553000,-122.24629000, 37.86551000,-122.24623000, 37.86549000,-122.24617000, 37.86490000,-122.24527000, 37.86483000,-122.24518000, 37.86477000,-122.24512000, 37.86474000,-122.24510000, 37.86471000,-122.24509000, 37.86469000,-122.24508000, 37.86466000,-122.24507000, 37.86463000,-122.24507000, 37.86460000,-122.24507000, 37.86456000,-122.24508000, 37.86447000,-122.24513000, 37.86442000,-122.24512000, 37.86437000,-122.24514000], [37.86437000,-122.24514000, 37.86436000,-122.24501000, 37.86434000,-122.24495000, 37.86433000,-122.24491000, 37.86431000,-122.24489000, 37.86429000,-122.24487000, 37.86416000,-122.24478000, 37.86383000,-122.24454000], [37.86383000,-122.24454000, 37.86385000,-122.24448000, 37.86384000,-122.24445000, 37.86384000,-122.24444000, 37.86384000,-122.24443000, 37.86383000,-122.24441000, 37.86369000,-122.24428000, 37.86343000,-122.24400000, 37.86330000,-122.24381000, 37.86328000,-122.24376000, 37.86321000,-122.24357000, 37.86319000,-122.24348000, 37.86318000,-122.24338000, 37.86317000,-122.24316000, 37.86316000,-122.24302000, 37.86318000,-122.24284000, 37.86320000,-122.24267000], [37.86320000,-122.24267000, 37.86299000,-122.24262000, 37.86258000,-122.24254000, 37.86234000,-122.24248000, 37.86221000,-122.24243000, 37.86219000,-122.24242000, 37.86217000,-122.24241000, 37.86214000,-122.24234000, 37.86210000,-122.24223000, 37.86207000,-122.24217000, 37.86205000,-122.24209000, 37.86202000,-122.24202000, 37.86198000,-122.24192000, 37.86194000,-122.24181000, 37.86184000,-122.24155000], [37.86184000,-122.24155000, 37.86202000,-122.24133000, 37.86218000,-122.24114000, 37.86220000,-122.24110000, 37.86222000,-122.24106000, 37.86224000,-122.24101000, 37.86225000,-122.24096000, 37.86226000,-122.24092000, 37.86230000,-122.24054000, 37.86222000,-122.24053000], [37.86230000,-122.24054000, 37.86226000,-122.24092000, 37.86225000,-122.24096000, 37.86224000,-122.24101000, 37.86222000,-122.24106000, 37.86220000,-122.24110000, 37.86218000,-122.24114000, 37.86202000,-122.24133000, 37.86184000,-122.24155000, 37.86178000,-122.24163000, 37.86176000,-122.24166000, 37.86172000,-122.24171000, 37.86170000,-122.24175000, 37.86169000,-122.24179000, 37.86168000,-122.24182000, 37.86167000,-122.24185000, 37.86166000,-122.24189000, 37.86165000,-122.24196000, 37.86165000,-122.24200000, 37.86165000,-122.24205000, 37.86165000,-122.24210000, 37.86165000,-122.24215000, 37.86167000,-122.24223000, 37.86171000,-122.24234000, 37.86173000,-122.24240000, 37.86176000,-122.24249000, 37.86179000,-122.24256000, 37.86182000,-122.24265000, 37.86185000,-122.24274000, 37.86196000,-122.24301000, 37.86200000,-122.24309000, 37.86207000,-122.24323000, 37.86213000,-122.24329000, 37.86221000,-122.24338000, 37.86229000,-122.24345000, 37.86251000,-122.24358000, 37.86258000,-122.24365000, 37.86263000,-122.24370000, 37.86265000,-122.24373000, 37.86267000,-122.24378000, 37.86268000,-122.24382000, 37.86269000,-122.24387000, 37.86269000,-122.24391000, 37.86267000,-122.24398000, 37.86266000,-122.24403000, 37.86268000,-122.24407000], [37.86268000,-122.24407000, 37.86267000,-122.24413000, 37.86266000,-122.24425000], [37.86266000,-122.24425000, 37.86282000,-122.24447000, 37.86301000,-122.24473000, 37.86307000,-122.24480000, 37.86318000,-122.24490000, 37.86355000,-122.24518000, 37.86395000,-122.24547000, 37.86400000,-122.24550000, 37.86405000,-122.24551000], [37.86405000,-122.24551000, 37.86406000,-122.24564000, 37.86405000,-122.24572000, 37.86404000,-122.24576000, 37.86403000,-122.24588000, 37.86398000,-122.24593000, 37.86396000,-122.24599000, 37.86393000,-122.24609000, 37.86390000,-122.24623000, 37.86390000,-122.24636000, 37.86387000,-122.24648000, 37.86385000,-122.24656000, 37.86383000,-122.24660000], [37.86383000,-122.24660000, 37.86385000,-122.24666000], [37.86385000,-122.24666000, 37.86388000,-122.24665000, 37.86397000,-122.24666000, 37.86400000,-122.24666000, 37.86409000,-122.24667000, 37.86424000,-122.24669000, 37.86431000,-122.24671000, 37.86434000,-122.24671000, 37.86447000,-122.24676000, 37.86455000,-122.24680000, 37.86463000,-122.24686000, 37.86468000,-122.24693000, 37.86472000,-122.24700000, 37.86476000,-122.24709000, 37.86479000,-122.24713000, 37.86486000,-122.24723000, 37.86492000,-122.24728000, 37.86501000,-122.24732000, 37.86521000,-122.24739000, 37.86524000,-122.24739000, 37.86524000,-122.24748000], [37.86524000,-122.24748000, 37.86523000,-122.24779000, 37.86519000,-122.24807000, 37.86517000,-122.24815000, 37.86514000,-122.24820000, 37.86511000,-122.24824000], [37.86511000,-122.24824000, 37.86535000,-122.24839000, 37.86538000,-122.24840000, 37.86563000,-122.24849000, 37.86567000,-122.24850000, 37.86568000,-122.24851000, 37.86568000,-122.24852000, 37.86569000,-122.24854000, 37.86570000,-122.24855000, 37.86572000,-122.24856000, 37.86574000,-122.24857000, 37.86576000,-122.24857000, 37.86578000,-122.24856000, 37.86580000,-122.24854000, 37.86582000,-122.24853000, 37.86583000,-122.24851000, 37.86584000,-122.24850000, 37.86586000,-122.24849000, 37.86587000,-122.24848000, 37.86589000,-122.24848000, 37.86593000,-122.24850000, 37.86598000,-122.24858000, 37.86601000,-122.24862000, 37.86601000,-122.24867000], [37.86601000,-122.24867000, 37.86598000,-122.24923000, 37.86597000,-122.24932000, 37.86596000,-122.24956000, 37.86591000,-122.25043000, 37.86598000,-122.25044000], [37.86598000,-122.25044000, 37.86655000,-122.25055000], [37.86655000,-122.25055000, 37.86790000,-122.25079000, 37.86797000,-122.25081000, 37.86796000,-122.25085000], [37.86796000,-122.25085000, 37.86790000,-122.25124000, 37.86787000,-122.25140000, 37.86792000,-122.25172000], [37.86792000,-122.25172000, 37.86794000,-122.25174000, 37.86795000,-122.25176000, 37.86796000,-122.25178000, 37.86796000,-122.25180000, 37.86808000,-122.25183000, 37.86812000,-122.25186000, 37.86826000,-122.25193000, 37.86833000,-122.25196000, 37.86842000,-122.25199000, 37.86871000,-122.25207000, 37.86885000,-122.25208000, 37.86914000,-122.25209000, 37.86921000,-122.25209000, 37.86961000,-122.25211000, 37.86966000,-122.25212000, 37.86964000,-122.25221000], [37.86964000,-122.25221000, 37.86963000,-122.25227000, 37.86962000,-122.25236000, 37.86957000,-122.25277000, 37.86955000,-122.25295000, 37.86952000,-122.25317000, 37.86939000,-122.25418000, 37.86933000,-122.25461000, 37.86932000,-122.25472000, 37.86930000,-122.25483000, 37.86924000,-122.25534000, 37.86923000,-122.25539000, 37.86917000,-122.25591000, 37.86915000,-122.25606000, 37.86910000,-122.25643000, 37.86904000,-122.25691000, 37.86898000,-122.25736000, 37.86887000,-122.25830000, 37.86886000,-122.25839000, 37.86885000,-122.25848000, 37.86882000,-122.25869000, 37.86876000,-122.25920000], [37.86876000,-122.25920000, 37.86885000,-122.25919000, 37.86908000,-122.25924000, 37.86950000,-122.25933000, 37.86953000,-122.25933000, 37.86963000,-122.25935000, 37.86996000,-122.25942000, 37.87012000,-122.25946000, 37.87020000,-122.25947000, 37.87051000,-122.25956000, 37.87071000,-122.25961000, 37.87088000,-122.25966000], [37.87088000,-122.25966000, 37.87083000,-122.25987000, 37.87083000,-122.25991000, 37.87084000,-122.25996000, 37.87088000,-122.25999000, 37.87099000,-122.26004000, 37.87108000,-122.26008000], [37.87108000,-122.26008000, 37.87107000,-122.26013000], [37.87107000,-122.26013000, 37.87108000,-122.26008000], [37.87108000,-122.26008000, 37.87099000,-122.26004000, 37.87088000,-122.25999000, 37.87084000,-122.25996000, 37.87083000,-122.25991000, 37.87083000,-122.25987000, 37.87088000,-122.25966000], [37.87088000,-122.25966000, 37.87071000,-122.25961000, 37.87051000,-122.25956000, 37.87020000,-122.25947000, 37.87012000,-122.25946000, 37.86996000,-122.25942000, 37.86963000,-122.25935000, 37.86953000,-122.25933000, 37.86950000,-122.25933000, 37.86908000,-122.25924000, 37.86885000,-122.25919000, 37.86876000,-122.25920000], [37.86876000,-122.25920000, 37.86882000,-122.25869000, 37.86885000,-122.25848000, 37.86886000,-122.25839000, 37.86887000,-122.25830000, 37.86898000,-122.25736000, 37.86904000,-122.25691000, 37.86910000,-122.25643000, 37.86915000,-122.25606000, 37.86917000,-122.25591000, 37.86923000,-122.25539000, 37.86924000,-122.25534000, 37.86930000,-122.25483000, 37.86932000,-122.25472000, 37.86933000,-122.25461000, 37.86939000,-122.25418000, 37.86952000,-122.25317000, 37.86955000,-122.25295000, 37.86957000,-122.25277000, 37.86962000,-122.25236000, 37.86963000,-122.25227000, 37.86964000,-122.25221000, 37.86966000,-122.25212000, 37.86961000,-122.25211000], [37.86961000,-122.25211000, 37.86921000,-122.25209000, 37.86914000,-122.25209000, 37.86885000,-122.25208000, 37.86871000,-122.25207000, 37.86842000,-122.25199000, 37.86833000,-122.25196000, 37.86826000,-122.25193000, 37.86812000,-122.25186000, 37.86808000,-122.25183000, 37.86796000,-122.25180000], [37.86796000,-122.25180000, 37.86795000,-122.25177000, 37.86795000,-122.25176000, 37.86794000,-122.25174000, 37.86792000,-122.25172000, 37.86787000,-122.25140000, 37.86790000,-122.25124000, 37.86796000,-122.25085000, 37.86797000,-122.25081000, 37.86790000,-122.25079000], [37.86790000,-122.25079000, 37.86655000,-122.25055000]]"

    fun getDecodedPolyline(serializedEncodedSteps: String): List<List<LatLng>> {
        val mapper = jacksonObjectMapper()
        return decodedPolylineToLatLngSteps(mapper.readValue<List<List<Double>>>(serializedEncodedSteps))
    }

    private fun decodedPolylineToLatLngSteps(decodedPolyline: List<List<Double>>): List<List<LatLng>> {
        return decodedPolyline.map { it.chunked(2).map { LatLng(it[0], it[1]) }}
    }
}
